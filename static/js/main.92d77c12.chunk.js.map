{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentItem","onPageChange","maxItemOnCurPage","className","cn","disabled","href","onClick","Math","ceil","map","page","active","newCurrentItem","handlePageClick","item","PerPagesList","App","useState","setPerPage","setCurrentItem","maxPages","id","defaultValue","perP","value","handleItemsPerPageClick","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAmBF,EAAcD,EAAU,EAAID,EACjDA,EAAQE,EAAcD,EAAU,EA0BpC,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QApBkB,WACN,IAAhBP,GAIJC,EAAaD,EAAcD,IAUrB,oBAUDT,EAAW,EAAGkB,KAAKC,KAAKX,EAAQC,IAC9BW,KAAI,SAAAC,GAAI,OACP,oBACER,UAAWC,IAAG,YAAa,CACzBQ,OAAQD,IAASH,KAAKC,KAAKP,EAAmBH,KAFlD,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAI,WAAMK,GACVJ,QAAS,kBArDC,SAACI,GACvB,IAAME,EAAiB,EAAId,GAAWY,EAAO,GAEzCX,IAAgBa,GAClBZ,EAAaY,GAiDYC,CAAgBH,IAJjC,SAMGA,KAREA,MAYX,oBAAIR,UAAWC,IAAG,YAAa,CAC7BC,SAAUH,IAAqBJ,IADjC,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeJ,IAAqBJ,EACpCS,QA5DkB,WACtBL,IAAqBJ,GAIzBG,EAAaD,EAAcD,IAkDrB,uBAWJ,6BACGT,EAAWU,EAAaE,GACtBQ,KAAI,SAAAK,GAAI,OACP,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC/FbC,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAa,IAApD,mBAAOjB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMC,EAAWrB,EAAcD,EAAU,EASzC,OACE,sBAAKI,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EAAWtB,EADtB,mBACwCC,EADxC,cACyDqB,EArBjD,MAuBFA,EAHN,eApBQ,GAoBR,OAMA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,aAAcP,EAAa,GAJ7B,SAMGA,EAAaN,KAAI,SAAAc,GAAI,OACpB,wBAEEC,MAAOD,EACPjB,QAAS,kBA3BS,SAACiB,GAC/BL,GAAW,kBAAMK,KACjBJ,EAAe,GAyBYM,CAAwBF,IAHzC,SAKGA,GAJIA,UASb,uBAAOG,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MAnDM,GAoDNC,QAASA,EACTC,YAAaA,EACbC,aA7Ce,SAACU,GAAD,OAAkBS,EAAeT,UCVxDiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.92d77c12.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentItem: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentItem,\n    onPageChange,\n  } = props;\n\n  const maxItemOnCurPage = currentItem + perPage - 1 > total\n    ? total : currentItem + perPage - 1;\n\n  const handlePageClick = (page: number) => {\n    const newCurrentItem = 1 + perPage * (page - 1);\n\n    if (currentItem !== newCurrentItem) {\n      onPageChange(newCurrentItem);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (maxItemOnCurPage === total) {\n      return;\n    }\n\n    onPageChange(currentItem + perPage);\n  };\n\n  const handlePrevPageClick = () => {\n    if (currentItem === 1) {\n      return;\n    }\n\n    onPageChange(currentItem - perPage);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentItem === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentItem === 1}\n            onClick={handlePrevPageClick}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, Math.ceil(total / perPage))\n          .map(page => (\n            <li\n              className={cn('page-item', {\n                active: page === Math.ceil(maxItemOnCurPage / perPage),\n              })}\n              key={page}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => handlePageClick(page)}\n              >\n                {page}\n              </a>\n            </li>\n          ))}\n        <li className={cn('page-item', {\n          disabled: maxItemOnCurPage === total,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={maxItemOnCurPage === total}\n            onClick={handleNextPageClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {getNumbers(currentItem, maxItemOnCurPage)\n          .map(item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {`Item ${item}`}\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL = 42;\nconst PerPagesList = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(PerPagesList[1]);\n  const [currentItem, setCurrentItem] = useState(1);\n\n  const maxPages = currentItem + perPage - 1;\n\n  const onPageChange = (page: number) => setCurrentItem(page);\n\n  const handleItemsPerPageClick = (perP: number) => {\n    setPerPage(() => perP);\n    setCurrentItem(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${maxPages / perPage} (items ${currentItem} - ${maxPages > TOTAL\n          ? TOTAL\n          : maxPages} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={PerPagesList[1]}\n          >\n            {PerPagesList.map(perP => (\n              <option\n                key={perP}\n                value={perP}\n                onClick={() => handleItemsPerPageClick(perP)}\n              >\n                {perP}\n              </option>\n            ))}\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL}\n        perPage={perPage}\n        currentItem={currentItem}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}