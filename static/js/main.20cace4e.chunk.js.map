{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","maxItemOnCurPage","className","cn","disabled","href","onClick","prevState","Math","ceil","map","active","pageNumberHandler","App","useState","setPerPage","setCurrentPage","id","defaultValue","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAmBF,EAAcD,EAAU,EAAID,EACjDA,EAAQE,EAAcD,EAAU,EA0BpC,OACE,qCAEE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EAAoB,OAAS,QAC5CO,QArBe,WACH,IAAhBP,GAIJC,GAAa,SAAAO,GAAS,OAAIA,EAAYT,MAWhC,oBAUDT,EAAW,EAAGmB,KAAKC,KAAKZ,EAAQC,IAC9BY,KAAI,SAAAjB,GAAC,OACJ,oBACES,UAAWC,IAAG,YAAa,CACzBQ,OAAQlB,IAAMe,KAAKC,KAAKR,EAAmBH,KAF/C,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAI,WAAMZ,GACVa,QAAS,kBAtDG,SAACb,GACrBM,IAAgB,EAAID,GAAWL,EAAI,IAIvCO,EAAa,EAAIF,GAAWL,EAAI,IAiDLmB,CAAkBnB,IAJnC,SAMGA,KAREA,MAYX,oBAAIS,UAAWC,IAAG,YAAa,CAC7BC,SAAUH,IAAqBJ,IADjC,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeJ,IAAqBJ,EAAQ,OAAS,QACrDS,QA7DgB,WACpBL,IAAqBJ,GAIzBG,GAAa,SAAAO,GAAS,OAAIA,EAAYT,MAmDhC,uBAWJ,6BACGT,EAAWU,EAAaE,GACtBS,KAAI,SAAAjB,GAAC,OACJ,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YClGNoB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KAEA,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACiCA,EADjC,cACkDA,EAAcD,EAAU,EAXlE,MAWsFC,EAAcD,EAAU,EADtH,eAVQ,GAUR,OAIA,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,aAAc,EAJhB,UAME,wBACEC,MAAM,IACNb,QAAS,WACPS,EAAW,GACXC,EAAe,IAJnB,eASA,wBACEG,MAAM,IACNb,QAAS,WACPS,EAAW,GACXC,EAAe,IAJnB,eASA,wBACEG,MAAM,KACNb,QAAS,WACPS,EAAW,IACXC,EAAe,IAJnB,gBASA,wBACEG,MAAM,KACNb,QAAS,WACPS,EAAW,IACXC,EAAe,IAJnB,qBAWJ,uBAAOI,QAAQ,kBAAkBlB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MAlEM,GAmENC,QAASA,EACTC,YAAaA,EACbC,aAAcgB,QCtEtBK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.20cace4e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype Callback = (prevState: number) => number;\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number | Callback) => void,\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const maxItemOnCurPage = currentPage + perPage - 1 > total\n    ? total : currentPage + perPage - 1;\n\n  const pageNumberHandler = (n: number) => {\n    if (currentPage === 1 + perPage * (n - 1)) {\n      return;\n    }\n\n    onPageChange(1 + perPage * (n - 1));\n  };\n\n  const rightArrowHandler = () => {\n    if (maxItemOnCurPage === total) {\n      return;\n    }\n\n    onPageChange(prevState => prevState + perPage);\n  };\n\n  const leftArrowHandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(prevState => prevState - perPage);\n  };\n\n  return (\n    <>\n      {/* Move this markup to Pagination */}\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={leftArrowHandler}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, Math.ceil(total / perPage))\n          .map(n => (\n            <li\n              className={cn('page-item', {\n                active: n === Math.ceil(maxItemOnCurPage / perPage),\n              })}\n              key={n}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${n}`}\n                onClick={() => pageNumberHandler(n)}\n              >\n                {n}\n              </a>\n            </li>\n          ))}\n        <li className={cn('page-item', {\n          disabled: maxItemOnCurPage === total,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={maxItemOnCurPage === total ? 'true' : 'false'}\n            onClick={rightArrowHandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {getNumbers(currentPage, maxItemOnCurPage)\n          .map(n => (\n            <li\n              data-cy=\"item\"\n              key={n}\n            >\n              {`Item ${n}`}\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nconst TOTAL = 42;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${currentPage} - ${currentPage + perPage - 1 > TOTAL ? TOTAL : currentPage + perPage - 1} of ${TOTAL})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n          >\n            <option\n              value=\"3\"\n              onClick={() => {\n                setPerPage(3);\n                setCurrentPage(1);\n              }}\n            >\n              3\n            </option>\n            <option\n              value=\"5\"\n              onClick={() => {\n                setPerPage(5);\n                setCurrentPage(1);\n              }}\n            >\n              5\n            </option>\n            <option\n              value=\"10\"\n              onClick={() => {\n                setPerPage(10);\n                setCurrentPage(1);\n              }}\n            >\n              10\n            </option>\n            <option\n              value=\"20\"\n              onClick={() => {\n                setPerPage(20);\n                setCurrentPage(1);\n              }}\n            >\n              20\n            </option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={TOTAL}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}